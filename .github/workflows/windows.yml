name: Build Windows Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Restore NuGet dependencies
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
         ${{ runner.os }}-nuget
      
    - name: Build for Windows
      run: dotnet build --no-restore -c Debug
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Compress
      run: tar -czvf GangstaXSCPBot.Windows.tar.gz GangstaXSCPBot/bin/Debug/netcoreapp3.1
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: GangstaXSCPBot.Windows.tar.gz
        path: GangstaXSCPBot/bin/Debug/netcoreapp3.1/
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    
